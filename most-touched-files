#!/usr/bin/env bash

additions=()
deletions=()
stat_paths=()
indices=()
paths=()
output=()
idx=0

# get all of the relevant lines from git log --numstat
# split into additions, deletions, and path arrays
while IFS='' read -r line || [[ -n "$line" ]]; do
  if [[ $line == [0-9]* ]]; then 
    stat=()
    for word in $line; do
      stat+=("$word")
    done
    additions+=("${stat[0]}")
    deletions+=("${stat[1]}")
    stat_paths+=("${stat[2]}")
    indices+=("$idx")
    ((idx++))
  fi
done < <(git log --numstat)


# get all of the files in the git repository
while IFS='' read -r line || [[ -n "$line" ]]; do
  paths+=("$line")
done < <(git ls-files)


n=0
count="${#paths[@]}"


# calculate the total additions and deletions for every file in the git repo
for path in "${paths[@]}"; do
  adds=0
  dels=0

  for index in "${indices[@]}"; do
    if [[ "$path" = "${stat_paths[index]}" ]]; then 
       ((adds+=${additions[index]}))
       ((dels+=${deletions[index]}))
       unset -v "indices[$index]"
    fi
  done
  
  ((n++))
  echo -ne "Working... adding to output line ${n} of ${count}\r"
  
  total=$((adds+dels))
  if [[ $total != 0 ]]; then
    output+=("${total}..........${adds}..........${dels}..........${path}")
  fi
done

# headers
echo -e "\rTotal Changes.....Additions.....Deletions.....File path"


# print out each line of the output on a new line
printf '%s\n' "${output[@]}" | sort -rn
